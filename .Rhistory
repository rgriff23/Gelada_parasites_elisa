#########################################################################
# PREPARATIONS
#########################################################################
# Load plyr package for ddply and MASS for neg binom GLM
library(plyr)
library(MASS)
library(lmtest)
# Read data into R
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
View(data)
View(data)
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
table(data$Cyst)
data$Cyst[data$Cyst==""]
data$Cyst[data$Cyst==""] <- 0
data$Cyst[data$Cyst=="Y"]
data$Cyst[data$Cyst=="Y"] <- 1
data$Cyst <- as.numeric(data$Cyst)
table(data$Cyst)
nrow(data)
nrow(data[data$Site=="SK",])
data <- data[data$Site=="SK",]
data[data$DOB=="UN",]
nrow(data[data$DOB=="UN",])
nrow(data[data$DOB=="UN",c(2,5,6)])
data[data$DOB=="UN",c(2,5,6)]
nrow(data)
568-41
nrow(data[data$DOB!="UN",])
data <- data[data$DOB!="UN",]
rm(data$Site)
data[,7]
data <- data[,-7]
table(data$Results)
data$Results <- ifelse(data$Results=="P", 1, 0)
table(data$Results)
names(data)
names(data)[8]
names(data)[8] <- Positive
names(data)[8] <- "Positive"
write.csv(data, file="~/Desktop/GitHub/Gelada_parasites_elisa/data2.csv", row.names = F)
table(data$Sex)
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
# Convert time data to POSIXct
data$Smp.date <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
# Convert time data to POSIXct
data$SmpDate <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
sumstats <- ddply(data, .(Name), function (x) {
data.frame(
NumSmps = nrow(x),
AllNeg = ifelse(sum(as.numeric(x$Positive)) == 0, TRUE, FALSE),
AllPos = ifelse(sum(as.numeric(x$Positive)) == nrow(x), TRUE, FALSE),
Pos = ifelse(sum(as.numeric(x$Positive)) > 0, TRUE, FALSE)
)
})
View(sumstats)
sumstats <- ddply(data, .(Name), function (x) {
data.frame(
NumSmps = nrow(x),
AllNeg = ifelse(sum(as.numeric(x$Positive)) == 0, TRUE, FALSE),
AllPos = ifelse(sum(as.numeric(x$Positive)) == nrow(x), TRUE, FALSE),
Pos = ifelse(sum(as.numeric(x$Positive)) > 0, TRUE, FALSE),
Cyst = x$Cyst[1]
)
})
sumstats[sumstats$Cyst==1,]
sumstats[sumstats$Pos==T,]
sumstats[sumstats$Pos==T & sumstats$Cyst==0,]
sumstats[sumstats$AllPos==T & sumstats$Cyst==0,]
sumstats[sumstats$AllPos==F & sumstats$AllNeg==F,]
data[data$Name=="Mary",]
library(glmmADMB)
test <- glmmadmb(Positive ~ Sex + (1|Name), family="nbinom", data=data)
data$Name <- as.factor(data$Name)
test <- glmmadmb(Positive ~ Sex + (1|Name), family="nbinom", data=data)
summary(test)
test <- glmmadmb(Positive ~ Sex + (1|Name), family="binom", data=data)
test
test <- glmmadmb(Positive ~ Sex + DOB + (1|Name), family="binom", data=data)
test
summary(test)
test <- glmmadmb(ODV ~ Sex + DOB + (1|Name), data=data)
library(nlme)
?lmer
?nlme
?lme
test = lme(ODV ~ Sex + DOB, data=data, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
test = lme(ODV ~ Sex + DOB, data=data, random=~1|Name)
summary(test)
test = lme(ODV ~ Sex + DOB, data=data, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
data2 <- ddply(data, .(SmpDate, Name), fun = function(x) {y=x[1,];data.frame(y, ODV2=mean(x$ODV))})
View(data2)
nrow(data)
nrow(data2)
data2 <- ddply(data, .(SmpDate, Name), fun = function(x) {data.frame(x[1,], ODV2=mean(x$ODV))})
data2 <- ddply(data, .(SmpDate, Name), fun = function(x) {data.frame(ODV2=mean(x$ODV))})
data2 <- ddply(data, .(SmpDate, Name), fun = function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Sex=x$Sex[1],
ODV=mean(x$ODV)
)
})
nrow(data2)
nrow(data)
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Sex=x$Sex[1],
ODV=mean(x$ODV)
)
})
nrow(data)
test = lme(ODV ~ Sex + DOB, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test = lme(ODV ~ Sex * DOB, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
data$Years <- data$SmpDate - data$SmpDOB
data$Years <- data$SmpDate - data$DOB
test = lme(ODV ~ Sex + Age, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Sex=x$Sex[1],
Age=x$Age[1],
ODV=mean(x$ODV)
)
})
test = lme(ODV ~ Sex + Age, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Sex=x$Sex[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
test = lme(ODV ~ Sex*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
data$Male <- ifelse(data$Sex=="M", 1, 0)
write.csv(data, file="~/Desktop/GitHub/Gelada_parasites_elisa/data1.csv", row.names = F)
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
data$Years <- data$Years/365.25
write.csv(data, file="~/Desktop/GitHub/Gelada_parasites_elisa/data1.csv", row.names = F)
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
test = lme(ODV ~ Male*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test = lme(ODV ~ Male+Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test = lme(ODV ~ Male*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test2 = lme(ODV ~ Male + Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test2)
test3 <- glmmadmb(ODV ~ Male*Years + (1|Name), data=data)
summary(test3)
test <- glmmadmb(ODV ~ Sex + DOB + (1|Name), data=data)?
?glmmadmb
test3 <- glmmadmb(ODV ~ Male*Years + (1|Name), data=data, family="gaussian")
summary(test3)
test4 <- glmmadmb(Positive ~ Male*Years + (1|Name), data=data, family="binom")
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
data$SmpDate <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
data$Years <- data$SmpDate - data$DOB
data$Years <- data$Years/365.25
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
data$SmpDate <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
data$Years <- data$SmpDate - data$DOB
data$Years <- data$Years/365.25
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
nrow(data)
nrow(data2)
test = lme(ODV ~ Male*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test2 = lme(ODV ~ Male + Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test2)
test3 <- glmmadmb(ODV ~ Male*Years + (1|Name), data=data, family="gaussian")
summary(test3)
test4 <- glmmadmb(ODV ~ Male+Years + (1|Name), data=data, family="gaussian")
summary(test4)
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
# Convert time data to POSIXct
data$SmpDate <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
data$Name <- as.factor(data$Name)
data2 <- ddply(data, .(SmpDate, Name), function(x) {
data.frame(
SmpDate=x$SmpDate[1],
Name=x$Name[1],
DOB=x$DOB[1],
Male=x$Male[1],
Age=x$Age[1],
Years=x$Years[1],
ODV=mean(x$ODV)
)
})
test = lme(ODV ~ Male*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test2 = lme(ODV ~ Male + Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test2)
test3 <- glmmadmb(ODV ~ Male*Years + (1|Name), data=data, family="gaussian")
summary(test3)
test4 <- glmmadmb(ODV ~ Male+Years + (1|Name), data=data, family="gaussian")
summary(test4)
test5 <- glmmadmb(Positive ~ Male*Years + (1|Name), data=data, family="binom")
summary(test5)
test6 <- glmmadmb(Positive ~ Male+Years + (1|Name), data=data, family="binom")
summary(test6)
summary(test)
summary(test2)
summary(test4) # years significant
summary(test6)
summary(test5)
hist(data$ODV)
hist(log(data$ODV))
test = lme(log(ODV) ~ Male*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
log(-1)
min(data$ODV)
test = lme(log(ODV+14) ~ Male*Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test)
test2 = lme(log(ODV+14) ~ Male + Years, data=data2, random=~1|Name, correlation=corCAR1(form=~SmpDate|Name))
summary(test2) # age significant **
test3 <- glmmadmb(log(ODV+14) ~ Male*Years + (1|Name), data=data, family="gaussian")
summary(test3)
test4 <- glmmadmb(log(ODV+14) ~ Male+Years + (1|Name), data=data, family="gaussian")
summary(test4) # years significant **
test5 <- glmmadmb(log(ODV+14) ~ Male*Years + (1|Name), data=data, family="binom")
summary(test5) # nothing
summary(test) # age approaching significance
summary(test2) # age significant **
summary(test3) # age significant
summary(test3) # age significant
summary(test4) # age significant
summary(test2) # age significant **
summary(test5) # nothing
summary(test6) # nothing
