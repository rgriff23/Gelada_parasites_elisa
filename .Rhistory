10/204
table(sum1[sum1$Cyst==1,"Male"])
table(sum1[sum1$Cyst==1,"Age"])
table(data$Positive)
table(sum1$Positive)
table(sum1$Negative)
table(sum1$allNeg)
sum1[sum1$allNeg==F,]
nrow(sum2)
sum2 <- sum1[sum1$allNeg==F,] # (subset to individuals with positive samples)
nrow(sum2)
table(sum2$Male)
table(sum2$Age) # 20 females with positive samples, 17 males
table(sum2$Cyst)
table(sum2$trans)
20/117
17/87
median(sum1$numSamps)
range(sum1$numSamps)
sum2[sum2$trans==TRUE,"numSamps"]
sum2[sum2$trans==TRUE,"Cyst"]
37/204
# Define bar heights and combine into matrix for barplot
breaks <- seq(0, 6, by=0.1)
cyst0 <- hist(log(data$ODV[data$Cyst==0] + 14), breaks=breaks, plot=F)
cyst1 <- hist(log(data$ODV[data$Cyst==1] + 14), breaks=breaks, plot=F)
cyst01 <- rbind(cyst0$counts, cyst1$counts)
# Stacked barplot
quartz()
barplot(cyst01, space=0, legend.text=c("No Cyst", "Cyst"), col=c("gray28", "gray87"), xlab="log(Index Value + 14)", ylab="Count (stacked)", ylim=c(0,60))
axis(side=1, at=(0:6)*10, labels=0:6)
abline(v=log(42.1 + 14)*10, lwd=2, lty=2)
# Which individual has a cyst and lies below the cutoff
data$Name[data$Cyst==1 & data$ODV<37.5] # Mary
breaks <- seq(0, 6, by=0.1)
cyst0 <- hist(log(data$ODV[data$Cyst==0] + 14), breaks=breaks, plot=F)
cyst1 <- hist(log(data$ODV[data$Cyst==1] + 14), breaks=breaks, plot=F)
cyst01 <- rbind(cyst0$counts, cyst1$counts)
breaks <- seq(0, 10, by=0.1)
cyst0 <- hist(log(data$ODV[data$Cyst==0] + 14), breaks=breaks, plot=F)
cyst1 <- hist(log(data$ODV[data$Cyst==1] + 14), breaks=breaks, plot=F)
cyst01 <- rbind(cyst0$counts, cyst1$counts)
cyst0 <- hist(log(data$ODV[data$Cyst==0] + 14), plot=F)
cyst1 <- hist(log(data$ODV[data$Cyst==1] + 14), plot=F)
cyst01 <- rbind(cyst0$counts, cyst1$counts)
hist(log(data$ODV[data$Cyst==0] + 14), breaks=breaks, plot=F)
cyst0 <- hist(log(data$ODV[data$Cyst==0] + 14), plot=F)
cyst0
hist(log(data$ODV[data$Cyst==0] + 14), plot=F)
hist(log(data$ODV[data$Cyst==1] + 14), plot=F)
hist(log(data$ODV[data$Cyst==0] + 14), plot=F)
range(data$ODV)
log(data$ODV[data$Cyst==0] + 14)
data$ODV[data$Cyst==0]
breaks <- seq(0, 6, by=0.1)
cyst0 <- hist(log(data$ODV[data$Cyst==0] + 15), breaks=breaks, plot=F)
cyst1 <- hist(log(data$ODV[data$Cyst==1] + 15), breaks=breaks, plot=F)
cyst01 <- rbind(cyst0$counts, cyst1$counts)
quartz()
barplot(cyst01, space=0, legend.text=c("No Cyst", "Cyst"), col=c("gray28", "gray87"), xlab="log(Index Value + 14)", ylab="Count (stacked)", ylim=c(0,60))
axis(side=1, at=(0:6)*10, labels=0:6)
abline(v=log(42.1 + 15)*10, lwd=2, lty=2)
quartz()
barplot(cyst01, space=0, legend.text=c("No Cyst", "Cyst"), col=c("gray28", "gray87"), xlab="log(Index Value + 14)*10", ylab="Count (stacked)", ylim=c(0,60))
axis(side=1, at=(0:6)*10, labels=0:6)
abline(v=log(42.1 + 15)*10, lwd=2, lty=2)
data$Name[data$Cyst==1 & data$ODV<42.1] # Mary
fig1 <- data[data$Name %in% sum1[sum1$allNeg==F,"Name"],]
fig1m <- fig1[fig1$Male == 1,]
fig1f <- fig1[fig1$Male == 0,]
m.names <- ddply(fig1m, .(Name), function(x){
x <- x[order(x$SmpDate),]
data.frame(x$DOB[1], x$Age[1])
})
f.names <- ddply(fig1f, .(Name), function(x){
x <- x[order(x$SmpDate),]
data.frame(x$DOB[1], x$Age[1])
})
m.names <- m.names[order(m.names[,2], decreasing=T),]
m.names[,3] <- as.character(m.names[,3])
f.names <- f.names[order(f.names[,2], decreasing=T),]
f.names[,3] <- as.character(f.names[,3])
# Two panel plot
quartz()
layout(matrix(1:2, 1, 2))
# Males
plot(c(1:10)~c(1:10), ylim=c(0,nrow(m.names)), xlim=c(min(fig1m$SmpDate), max(fig1m$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="Individual", main="Males (n = 50)")
ddply(fig1[fig1$Sex=="M",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(m.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(m.names), labels=m.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
xdates <- c("Aug 2014", "Sep 2014", "Oct 2014", "Apr 2015", "May 2015", "June 2015")
xpos <- as.POSIXct(c("2014/08/01", "2014/09/01", "2014/10/01", "2015/04/01", "2015/05/01", "2015/06/01"), format="%Y/%m/%d")
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
# Add legend
legend(1402047062, 63.27607, legend=c("Positive", "Negative"), pch=21, pt.bg=c("black", "white"), xpd=TRUE, cex=0.75)
# Females
plot(c(1:10)~c(1:10), ylim=c(0,nrow(f.names)), xlim=c(min(fig1f$SmpDate), max(fig1f$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="", main="Females (n = 57)")
ddply(fig1[fig1$Sex=="F",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(f.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(f.names), labels=f.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
min(fig1m$SmpDate)
max(fig1m$SmpDate)
# Create date variables
data$SmpDate <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
# Create data for figures
fig1 <- data[data$Name %in% sum1[sum1$allNeg==F,"Name"],]
fig1m <- fig1[fig1$Male == 1,]
fig1f <- fig1[fig1$Male == 0,]
# Names ordered by age
m.names <- ddply(fig1m, .(Name), function(x){
x <- x[order(x$SmpDate),]
data.frame(x$DOB[1], x$Age[1])
})
f.names <- ddply(fig1f, .(Name), function(x){
x <- x[order(x$SmpDate),]
data.frame(x$DOB[1], x$Age[1])
})
m.names <- m.names[order(m.names[,2], decreasing=T),]
m.names[,3] <- as.character(m.names[,3])
f.names <- f.names[order(f.names[,2], decreasing=T),]
f.names[,3] <- as.character(f.names[,3])
m.names[m.names[,3]=="I",3] <- paste(m.names[m.names[,3]=="I",3], 1:sum(m.names[,3]=="I"), sep="")
m.names[m.names[,3]=="SA",3] <- paste(m.names[m.names[,3]=="SA",3], 1:sum(m.names[,3]=="SA"), sep="")
m.names[m.names[,3]=="A",3] <- paste(m.names[m.names[,3]=="A",3], 1:sum(m.names[,3]=="A"), sep="")
f.names[f.names[,3]=="I",3] <- paste(f.names[f.names[,3]=="I",3], 1:sum(f.names[,3]=="I"), sep="")
f.names[f.names[,3]=="SA",3] <- paste(f.names[f.names[,3]=="SA",3], 1:sum(f.names[,3]=="SA"), sep="")
f.names[f.names[,3]=="A",3] <- paste(f.names[f.names[,3]=="A",3], 1:sum(f.names[,3]=="A"), sep="")
# Two panel plot
quartz()
layout(matrix(1:2, 1, 2))
# Males
plot(c(1:10)~c(1:10), ylim=c(0,nrow(m.names)), xlim=c(min(fig1m$SmpDate), max(fig1m$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="Individual", main="Males (n = 50)")
ddply(fig1[fig1$Sex=="M",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(m.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(m.names), labels=m.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
xdates <- c("Aug 2014", "Sep 2014", "Oct 2014", "Apr 2015", "May 2015", "June 2015")
xpos <- as.POSIXct(c("2014/08/01", "2014/09/01", "2014/10/01", "2015/04/01", "2015/05/01", "2015/06/01"), format="%Y/%m/%d")
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
# Add legend
legend(1402047062, 63.27607, legend=c("Positive", "Negative"), pch=21, pt.bg=c("black", "white"), xpd=TRUE, cex=0.75)
# Females
plot(c(1:10)~c(1:10), ylim=c(0,nrow(f.names)), xlim=c(min(fig1f$SmpDate), max(fig1f$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="", main="Females (n = 57)")
ddply(fig1[fig1$Sex=="F",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(f.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(f.names), labels=f.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
plot((1:10)~(1:10), ylim=c(0,nrow(m.names)), xlim=c(min(fig1m$SmpDate), max(fig1m$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="Individual", main="Males (n = 50)")
plot(c(1:10)~ c(1:10))
plot(c(1:10),c(1:10), ylim=c(0,nrow(m.names)), xlim=c(min(fig1m$SmpDate), max(fig1m$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="Individual", main="Males (n = 50)")
ddply(fig1[fig1$Sex=="M",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(m.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(m.names), labels=m.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
xdates <- c("Aug 2014", "Sep 2014", "Oct 2014", "Apr 2015", "May 2015", "June 2015")
xpos <- as.POSIXct(c("2014/08/01", "2014/09/01", "2014/10/01", "2015/04/01", "2015/05/01", "2015/06/01"), format="%Y/%m/%d")
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
# Add legend
legend(1402047062, 63.27607, legend=c("Positive", "Negative"), pch=21, pt.bg=c("black", "white"), xpd=TRUE, cex=0.75)
# Females
plot(c(1:10)~c(1:10), ylim=c(0,nrow(f.names)), xlim=c(min(fig1f$SmpDate), max(fig1f$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="", main="Females (n = 57)")
ddply(fig1[fig1$Sex=="F",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(f.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(f.names), labels=f.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
# Two panel plot
quartz()
layout(matrix(1:2, 1, 2))
# Males
plot(c(1:10),c(1:10), ylim=c(0,nrow(m.names)), xlim=c(min(fig1m$SmpDate), max(fig1m$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="Individual", main="Males (n = 50)")
ddply(fig1[fig1$Sex=="M",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(m.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(m.names), labels=m.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
xdates <- c("Aug 2014", "Sep 2014", "Oct 2014", "Apr 2015", "May 2015", "June 2015")
xpos <- as.POSIXct(c("2014/08/01", "2014/09/01", "2014/10/01", "2015/04/01", "2015/05/01", "2015/06/01"), format="%Y/%m/%d")
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
# Add legend
legend(1402047062, 63.27607, legend=c("Positive", "Negative"), pch=21, pt.bg=c("black", "white"), xpd=TRUE, cex=0.75)
# Females
plot(c(1:10)~c(1:10), ylim=c(0,nrow(f.names)), xlim=c(min(fig1f$SmpDate), max(fig1f$SmpDate)), type="n", xaxt="n", yaxt="n", xlab="Sample date", ylab="", main="Females (n = 57)")
ddply(fig1[fig1$Sex=="F",], .(Name), function(x) {
x <- x[!duplicated(x$SmpDate),]
x <- x[order(x$SmpDate),]
cols <- ifelse(x$Positive==1, "black", "white")
pos <- which(f.names[,1]==x$Name[1])
#points(rep(pos, nrow(x)) ~ SmpDate, data=x, type="l", col="gray")
abline(h=pos, col="gray", lty=3)
points(rep(pos, nrow(x)) ~ SmpDate, data=x, pch=21, bg=cols, cex=0.5)
})
axis(side=2, at=1:nrow(f.names), labels=f.names[,3], las=2, cex.axis=0.3, tcl=-0.2, mgp=c(3,0.3,0))
axis(side=1, at=xpos, labels=FALSE)
text(x=xpos, y=rep(-7, length(xpos)), labels=xdates, cex=0.75, srt=45, pos=1, xpd=T)
1/37
7/60
29/107
?glmmadmb
library(lme4)
?glmer
test=glmer(Positive ~ Male + Age + (1|Name), data=data, family="binomial")
summary(test)
test=glmer(Positive ~ Male + factor(Age, ordered=F) + (1|Name), data=data, family="binomial")
summary(test)
test=glmer(Positive ~ Male + Years + (1|Name), data=data, family="binomial")
summary(test)
test=glmer(Positive ~ Male * Years + (1|Name), data=data, family="binomial")
summary(test)
test=glmer(Positive ~ Male * Years , data=data, family="binomial")
summary(test)
test=glmer(Positive ~ Male * Years , data=data, family="binomial")
summary(test)
test=glm(Positive ~ Male * Years, data=data, family="binomial")
summary(test)
test=glmer(Positive ~ Male * Years + (1|Name), data=data, family="binomial")
summary(test)
model.b1 <- glm(Positive ~ Male*Age, data=data, family="binomial")
summary(model.b1)
model.b1 <- glm(Positive ~ Male+Age, data=data, family="binomial")
summary(model.b1)
glmmadmb(Positive ~ Male * Years + (1|Name), data=data, family="nbinom")
test=glmmadmb(Positive ~ Male * Years + (1|Name), data=data, family="nbinom")
summary(test)
# Binomial GLM with ordered categorial age
model.b1 <- glm(Positive ~ Male + Age, data=data, family="binomial")
summary(model.b1) # positive linear effect of age (p < 0.01)
# Binomial GLM with continuous age
model.c1 <- glm(Positive ~ Male * Years, data=data, family="binomial")
summary(model.c1) # significant age and interaction term (age increases risk, stronger effect in males)
# Binomial GLMM with ordered categorial age, individual random effect
model.b2 <- glmer(Positive ~ Male + Age + (1|Name), data=data, family="binomial")
summary(model.b2) # nothing
# Binomial GLMM with continuous age, individual random effect
model.c2 <- glmer(Positive ~ Male * Years + (1|Name), data=data, family="binomial")
summary(model.c2) # nothing
?glmer
model.b2 <- glmer(Positive ~ Male + Age + Cyst + (1|Name), data=data, family="binomial")
summary(model.b2) # nothing
model.c2 <- glmer(Positive ~ Male * Years + Cyst + (1|Name), data=data, family="binomial")
summary(model.c2) # nothing
model.b1 <- glm(Positive ~ Male + Age + Name, data=data, family="binomial")
summary(model.b1)
exp(17)
model.c2 <- glmer(Positive ~ Male * Years + Cyst + (1|Name), data=data, family="binomial")
summary(model.c2) # nothing
model.b2 <- glmer(Positive ~ Male + Age + Cyst + (1|Name), data=data, family="binomial")
summary(model.b2) # nothing
exp(16)
# Binomial GLMM with ordered categorial age, individual random effect
model.b2 <- glmer(Positive ~ Male + Age + (1|Name), data=data, family="binomial")
summary(model.b2) # nothing
# Binomial GLMM with continuous age, individual random effect
model.c2 <- glmer(Positive ~ Male * Years + (1|Name), data=data, family="binomial")
summary(model.c2) # nothing
sum1$Positive <- ifelse(sum1$allNeg==F, 1, 0)
test <- glm(Positive ~ Male * Years + numSamps, data=sum1)
summary(test)
test <- glm(Positive ~ Male * Years + numSamps, data=sum1, family="binomial")
summary(test)
test <- glmer.nb(numPos ~ Male * Years + numSamps, data=sum1)
summary(test)
?glm
test <- glm(numPos ~ Male * Years + numSamps, data=sum1, family="binomial")
test <- glm(numPos ~ Male * Years + numSamps, data=sum1, family="poisson")
summary(test)
test <- glm(numPos ~ Male + Years + numSamps, data=sum1, family="poisson")
summary(test)
test <- glm.nb(numPos ~ Male + Years + numSamps, data=sum1)
summary(test)
plot(numPos~numSamps, data=sum1)
hist(sum1[sum1$Cyst==0,"numSamps"])
hist(sum1[sum1$Cyst==1,"numSamps"])
range(sum1[sum1$Cyst==0,"numSamps"])
range(sum1[sum1$Cyst==1,"numSamps"])
median(sum1[sum1$Cyst==0,"numSamps"])
median(sum1[sum1$Cyst==1,"numSamps"])
test <- glm.nb(numPos ~ Male + Years + Cyst + numSamps, data=sum1)
summary(test)
test <- glm(numPos ~ Male + Years + Cyst + numSamps, data=sum1, family="poisson")
summary(test)
test <- glm.nb(numPos ~ Male + Years + Cyst + numSamps, data=sum1)
summary(test)
sum3 <- sum1[sum1$Cyst==0,]
sum(sum3$numSamps)
sum(sum3$numPos)
469-51
sum1[sum1$Cyst==1,]
sum(sum1[sum1$Cyst==1,"Years"])
mean(sum1[sum1$Cyst==1,"Years"])
mean(sum1[sum1$Cyst==0,"Years"])
summary(glm(Positive ~ Male + Years, data=sum3, family="binomial"))
model.b2 <- glmer(Positive ~ Male + Age + (1|Name), data=data[data$Cyst==0,], family="binomial")
summary(model.b2) # nothing
model.c2 <- glmer(Positive ~ Male * Years + (1|Name), data=data[data$Cyst==0,], family="binomial")
summary(model.c2) # nothing
data[data$Cyst==0,]
sum(data[data$Cyst==0,"Positive"])
sum(data[data$Cyst==0,c("Positive", "Age")])
table(data[data$Cyst==0,c("Positive", "Age")])
1/56
1/57
6/100
44/112
data[data$Cyst==0 & data$Positive==1]
data[data$Cyst==0 & data$Positive==1,]
unique(data[data$Cyst==0 & data$Positive==1,"Name"])
length(unique(data[data$Cyst==0 & data$Positive==1,"Name"]))
sum1[sum1$Cyst==0 & sum1$allNeg==F,]
nrow(sum1[sum1$Cyst==0 & sum1$allNeg==F,])
sum(sum1[sum1$Cyst==0 & sum1$allNeg==F,"numPos"])
51/27
sum(sum1[sum1$Cyst==0 & sum1$allNeg==T,])
nrow(sum1[sum1$Cyst==0 & sum1$allNeg==T,])
mean(sum1[sum1$Cyst==0 & sum1$allNeg==F,"Years"])
mean(sum1[sum1$Cyst==0 & sum1$allNeg==T,"Years"])
test <- glm(Positive ~ Male * Years + Name, data=data, family="binomial")
summary(test)
test <- glm(Positive ~ Male + Years + Name, data=data, family="binomial")
summary(test)
test <- glm(Positive ~ Name, data=data, family="binomial")
summary(test)
hist(data$Year)
hist(data$Years)
sum1[sum1$Cyst==1,"Years"]
sum3
# Load packages
library(plyr)
library(lme4)
# Read data into R
data <- read.csv("~/Desktop/GitHub/Gelada_parasites_elisa/data.csv", header=TRUE, stringsAsFactors=FALSE)
# Create factor variables
data$Name <- as.factor(data$Name)
data$Age <- ordered(data$Age, levels=c("I", "SA", "A"))
# Create date variables
data$SmpDate <- as.POSIXct(data$SmpDate, format="%m/%d/%y")
data$DOB <- as.POSIXct(data$DOB, format="%m/%d/%y")
# Convert ODV values below threshold to 0, above to 1
data$Positive <- ifelse(data$ODV < 42.1, 0, 1)
# demographic breakdown of samples
nrow(data) # 527 total rows of data
table(data$Male) # 261 females, 266 males
table(data$Age) # 57 infants, 104 juvenile/subadult, 366 adult
# summarize data for unique individuals
sum1 <- ddply(data, .(Name), function(x) {
Age <- x$Age[1]
Male <- x$Male[1]
Years <- mean(x$Years)
Cyst <- x$Cyst[1]
numSamps <- nrow(x)
numPos <- sum(x$Positive)
allNeg <- ifelse(numPos==0, TRUE, FALSE)
allPos <- ifelse(numSamps==numPos, TRUE, FALSE)
trans <- ifelse(!allNeg & !allPos, TRUE, FALSE)
data.frame(Age, Male, Years, Cyst, checkCyst, numSamps, numPos, allNeg, allPos, trans)
})
# demographic breakdown of individuals
nrow(sum1) # 204 unique individuals
table(sum1$Male) # 117 females, 87 males
table(sum1$Age) # 37 infants, 60 juvenile/subadult, 107 adult
range(sum1$Years) # age range from ~0-26 years
# distribution of cysts
sum(sum1$Cyst) # 10 cysts in 204 individuals (0.05 prevalence)
table(sum1[sum1$Cyst==1,"Male"]) # 6 females, 4 males
table(sum1[sum1$Cyst==1,"Age"]) # 0 infants, 1 subadult, 9 adults
# distribution of positive samples
median(sum1$numSamps) # median number of samples per individual was 2
range(sum1$numSamps) # number of samples ranged from 1 to 14
table(data$Positive) # 419 total negative samples, 108 total positive samples
table(sum1$allNeg) # 37 individuals with at least 1 positive sample
sum2 <- sum1[sum1$allNeg==F,] # (subset to individuals with positive samples)
table(sum2$Male) # 20 females and 17 males with positive samples
table(sum2$Age) # 1 infant, 7 subadults, and 29 adults with positive samples
table(sum2$Cyst) # 10 cyst and 27 non-cyst individuals with positive samples
table(sum2$trans) # 17 were always positive, 20 were 'transient'
sum2[sum2$trans==TRUE,"Cyst"] # only 1 cyst individual was 'transient' (Mary, 1 negative smp)
# summarize data for unique individuals
sum1 <- ddply(data, .(Name), function(x) {
Age <- x$Age[1]
Male <- x$Male[1]
Years <- mean(x$Years)
Cyst <- x$Cyst[1]
numSamps <- nrow(x)
numPos <- sum(x$Positive)
allNeg <- ifelse(numPos==0, TRUE, FALSE)
allPos <- ifelse(numSamps==numPos, TRUE, FALSE)
trans <- ifelse(!allNeg & !allPos, TRUE, FALSE)
data.frame(Age, Male, Years, Cyst, numSamps, numPos, allNeg, allPos, trans)
})
# demographic breakdown of individuals
nrow(sum1) # 204 unique individuals
table(sum1$Male) # 117 females, 87 males
table(sum1$Age) # 37 infants, 60 juvenile/subadult, 107 adult
range(sum1$Years) # age range from ~0-26 years
# distribution of cysts
sum(sum1$Cyst) # 10 cysts in 204 individuals (0.05 prevalence)
table(sum1[sum1$Cyst==1,"Male"]) # 6 females, 4 males
table(sum1[sum1$Cyst==1,"Age"]) # 0 infants, 1 subadult, 9 adults
# distribution of positive samples
median(sum1$numSamps) # median number of samples per individual was 2
range(sum1$numSamps) # number of samples ranged from 1 to 14
table(data$Positive) # 419 total negative samples, 108 total positive samples
table(sum1$allNeg) # 37 individuals with at least 1 positive sample
sum2 <- sum1[sum1$allNeg==F,] # (subset to individuals with positive samples)
table(sum2$Male) # 20 females and 17 males with positive samples
table(sum2$Age) # 1 infant, 7 subadults, and 29 adults with positive samples
table(sum2$Cyst) # 10 cyst and 27 non-cyst individuals with positive samples
table(sum2$trans) # 17 were always positive, 20 were 'transient'
sum2[sum2$trans==TRUE,"Cyst"] # only 1 cyst individual was 'transient' (Mary, 1 negative smp)
sum2[sum2$trans==TRUE,c("Name", "Cyst")] # only 1 cyst individual was 'transient' (Mary, 1 negative smp)
summary(glmer(Cyst ~ Years, data=sum1, family="binomial"))
summary(glm(Cyst ~ Years, data=sum1, family="binomial"))
summary(glm(Cyst ~ Age, data=sum1, family="binomial"))
summary(glm(Cyst ~ factor(Age, ordered=F), data=sum1, family="binomial"))
summary(glm(Cyst ~ Male * Age, data=sum1, family="binomial"))
summary(glm(Cyst ~ Male * Years, data=sum1, family="binomial"))
nrow(data)
data2 <- data[! data$Name %in% c("Devil", "Yoshi"),]
nrow(data2)
model.e2 <- glmer(Positive ~ Male * Years + (1|Name), data=data2[data2$Cyst==0,], family="binomial")
summary(model.e2) # nothing
model.d2 <- glmer(Positive ~ Male * Years + (1|Name), data=data[data$Cyst==0,], family="binomial")
summary(model.d2) # nothing
model.b2 <- glmer(Positive ~ Male + Age + (1|Name), data=data, family="binomial")
summary(model.b2) # nothing
model.c2 <- glmer(Positive ~ Male * Years + (1|Name), data=data, family="binomial")
summary(model.c2) # nothing
sum1$Positive <- ifelse(sum1$allNeg==F, 1, 0)
test <- glm(Positive ~ Male * Years +  numSamps, data=sum1, family="poisson")
summary(test)
test <- glm(Positive ~ Male * Years , data=sum1, family="poisson")
summary(test)
?glm
test <- glm(Positive ~ Male * Years , data=sum1, family="poisson", weights=numSamps)
summary(test)
test <- glm(Positive ~ Male * Years , data=sum1, family="binomial", weights=numSamps)
test <- glm(Positive ~ Male * Years , data=sum1, family="binomial")
summary(test)
plot(Years ~ numSamps, data=data)
plot(Years ~ numSamps, data=sum1)
model.b2 <- glmer(Positive ~ Male + Age + (1|Name), data=data[data$Age != "I",], family="binomial")
summary(model.b2) # nothing
model.b2 <- glmer(Positive ~ Male * Years + (1|Name), data=data[data$Age != "I",], family="binomial")
summary(model.b2) # nothing
model.b2 <- glmer(Positive ~ Male * Years + (1|Name), data=data[data$Age == "A",], family="binomial")
summary(model.b2) # nothing
plot(numSamps~Years,data=sum())
plot(numSamps~Years,data=sum1
)
model.b2 <- glmer(Positive ~ Male + Age + (1|Name), data=data, family="binomial")
summary(model.b2) # nothing
# Binomial GLMM with continuous age, individual random effect
model.c2 <- glmer(Positive ~ Male * Years + (1|Name), data=data, family="binomial")
summary(model.c2) # nothing
model.d2 <- glmer(Positive ~ Male * Years + (1|Name), data=data[data$Cyst==0,], family="binomial")
summary(model.d2) # nothing
data2 <- data[! data$Name %in% c("Devil", "Yoshi"),]
model.e2 <- glmer(Positive ~ Male * Years + (1|Name), data=data2[data2$Cyst==0,], family="binomial")
summary(model.e2) # nothing
